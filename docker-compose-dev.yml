version: "3.3"
networks:
  internal_network:
# network created by docker, you can bind to yourr by 'external: true'
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/24
services:
  db:
    image: "mariadb:10.8"
    networks:
      internal_network:
        ipv4_address: 172.20.0.5
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=pass1234!
      - MYSQL_PASSWORD=pass1234!
      - MYSQL_USER=user
      - MYSQL_DATABASE=db
  grpc_proxy:
    image: "envoyproxy/envoy:v1.21-latest"
    networks:
      internal_network:
        ipv4_address: 172.20.0.7
    ports:
      - "5002:5002"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    depends_on:
      - db
  redis:
    image: "redis:7.0.1-alpine"
    networks:
      internal_network:
        ipv4_address: 172.20.0.9
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/etc/redis.conf
    command: redis-server /etc/redis.conf
    depends_on:
      - grpc_proxy
  backend:
    build: ./node-server/Dockerfile.dev
    networks:
      internal_network:
        ipv4_address: 172.20.0.6
    ports:
      - "8080:8080"
      - "5001:5001"
    volumes:
      - ./node-server/src:/project/node-server/src:ro
      - ./node-server/package.json:/project/node-server/package.json:rw
      - ./node-server/yarn.lock:/project/node-server/yarn.lock:rw
      - ./node-server/tsconfig.json:/project/node-server/tsconfig.json:ro
      - ./node-server/.env:/project/node-server/.env:ro
      - ./node-server/.env:/project/node-server/build/.env:ro
      - ./node-server/node_modules:/project/node-server/node_modules:rw
    depends_on:
      - grpc_proxy
      - db
      - redis
  frontend:
    build: ./react-app/Dockerfile.dev
    networks:
      internal_network:
        ipv4_address: 172.20.0.8
    volumes:
      - ./react-app/src:/project/react-app/src:ro
      - ./react-app/package.json:/project/react-app/package.json
    depends_on:
      - grpc_proxy
      - backend
    ports:
      - "3000:3000"